package ControleAmostrasLab;

import ControleAmostrasLab.model.ControleAmostra;
import ControleAmostrasLab.model.ControleAmostraUrina;
import ControleAmostrasLab.model.ControleAmostraSangue;

import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

public class Menu {
    public static void main(String[] args) {

        Scanner leia = new Scanner(System.in);
        ArrayList<ControleAmostra> amostras = new ArrayList<>();
        int opcao;

        // Teste da Classe ControleAmostra
        System.out.println("****** TESTE DE AMOSTRAS ******");
        
        // Teste da Classe ControleAmostraSangue
        ControleAmostraSangue amostraSangue = new ControleAmostraSangue(1, "José da Silva", "A+", new Date());
        amostraSangue.visualizarAmostra();
        amostraSangue.atualizarStatus("Em análise");
        amostraSangue.visualizarAmostra();
        amostraSangue.inserirResultado("Resultado positivo para HIV");
        amostraSangue.visualizarAmostra();
        
        // Teste da Classe ControleAmostraUrina
        ControleAmostraUrina amostraUrina = new ControleAmostraUrina(2, "Maria dos Santos", new Date(), "Amarela");
        amostraUrina.visualizarAmostra();
        amostraUrina.atualizarStatus("Resultado concluído");
        amostraUrina.visualizarAmostra();
        amostraUrina.inserirResultado("Sem alterações");
        amostraUrina.visualizarAmostra();

        while (true) {
            System.out.println("*****************************************************");
            System.out.println("                                                     ");
            System.out.println("            LABORATÓRIO DE CONTROLE DE AMOSTRAS      ");
            System.out.println("                                                     ");
            System.out.println("*****************************************************");
            System.out.println("                                                     ");
            System.out.println("            1 - Cadastrar Amostra                    ");
            System.out.println("            2 - Listar todas as Amostras             ");
            System.out.println("            3 - Buscar Amostra por ID                ");
            System.out.println("            4 - Atualizar Status da Amostra          ");
            System.out.println("            5 - Inserir Resultado da Análise         ");
            System.out.println("            6 - Excluir Amostra                      ");
            System.out.println("            7 - Sair                                 ");
            System.out.println("                                                     ");
            System.out.println("*****************************************************");
            System.out.println("Entre com a opção desejada:                          ");
            System.out.println("                                                     ");

            opcao = leia.nextInt();

            if (opcao == 7) {
                System.out.println("\nLaboratório de Controle de Amostras - Até logo!");
                leia.close();
                System.exit(0);
            }

            switch (opcao) {
                case 1:
                    System.out.println("Cadastrar Amostra\n\n");
                    System.out.print("Nome do cliente: ");
                    leia.nextLine();  
                    String nomeCliente = leia.nextLine();
                    System.out.print("Tipo de amostra (Urina, Sangue, etc.): ");
                    String tipoAmostra = leia.nextLine();
                    System.out.print("Data de recebimento (dd/mm/aaaa): ");
                    String dataString = leia.nextLine();

                    Date dataRecebimento = new Date(); 
                    ControleAmostra novaAmostra = null;

                    if (tipoAmostra.equalsIgnoreCase("Sangue")) {
                        System.out.print("Tipo de Sangue (ex: A+, B-, O+): ");
                        String tipoSangue = leia.nextLine(); 
                        novaAmostra = new ControleAmostraSangue(amostras.size() + 1, nomeCliente, tipoSangue, dataRecebimento);
                    } else if (tipoAmostra.equalsIgnoreCase("Urina")) {
                        novaAmostra = new ControleAmostraUrina(amostras.size() + 1, nomeCliente, dataRecebimento, "Normal");
                    } else {
                        novaAmostra = new ControleAmostraSangue(amostras.size() + 1, nomeCliente, "Tipo Geral", dataRecebimento);
                    }
                    amostras.add(novaAmostra);
                    System.out.println("Amostra cadastrada com sucesso!\n\n");
                    break;

                case 2:
                    System.out.println("Listar todas as Amostras\n\n");
                    if (amostras.isEmpty()) {
                        System.out.println("Nenhuma amostra cadastrada.\n");
                    } else {
                        for (ControleAmostra amostra : amostras) {
                            amostra.visualizarAmostra();
                        }
                    }
                    break;

                default:
                    System.out.println("\nOpção Inválida!\n");
                    break;
            }
        }
    }
}
