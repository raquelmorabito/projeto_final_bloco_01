package ControleAmostrasLab;

import ControleAmostrasLab.model.ControleAmostra;
import ControleAmostrasLab.model.ControleAmostraSangue;
import ControleAmostrasLab.model.ControleAmostraUrina;

import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

public class Menu {
    public static void main(String[] args) {
        Scanner leia = new Scanner(System.in);
        ArrayList<ControleAmostra> amostras = new ArrayList<>(); // Lista para armazenar as amostras
        int opcao;

        while (true) {
            System.out.println("*****************************************************");
            System.out.println("                                                     ");
            System.out.println("            LABORATÓRIO DE CONTROLE DE AMOSTRAS      ");
            System.out.println("                                                     ");
            System.out.println("*****************************************************");
            System.out.println("                                                     ");
            System.out.println("            1 - Cadastrar Amostra                    ");
            System.out.println("            2 - Listar todas as Amostras             ");
            System.out.println("            3 - Buscar Amostra por ID                ");
            System.out.println("            4 - Atualizar Status da Amostra          ");
            System.out.println("            5 - Inserir Resultado da Análise         ");
            System.out.println("            6 - Excluir Amostra                      ");
            System.out.println("            7 - Sair                                 ");
            System.out.println("                                                     ");
            System.out.println("*****************************************************");
            System.out.println("Entre com a opção desejada:                          ");
            System.out.println("                                                     ");

            opcao = leia.nextInt();

            if (opcao == 7) {
                System.out.println("\nLaboratório de Controle de Amostras - Até logo!");
                leia.close();
                System.exit(0);
            }

            switch (opcao) {
                case 1:
                    System.out.println("Cadastrar Amostra\n\n");
                    System.out.print("Nome do cliente: ");
                    leia.nextLine();  
                    String nomeCliente = leia.nextLine();
                    System.out.print("Tipo de amostra (Sangue/Urina): ");
                    String tipoAmostra = leia.nextLine();
                    System.out.print("Data de recebimento (dd/mm/aaaa): ");
                    String dataString = leia.nextLine();
                    Date dataRecebimento = new Date(); // Aqui você pode melhorar para tratar a data corretamente

                    // Cadastro de amostra de Sangue
                    if (tipoAmostra.equalsIgnoreCase("Sangue")) {
                        System.out.print("Tipo de sangue (ex: A+, B-, etc): ");
                        String tipoSangue = leia.nextLine();
                        ControleAmostraSangue novaAmostraSangue = new ControleAmostraSangue(amostras.size() + 1, nomeCliente, dataRecebimento, tipoSangue);
                        amostras.add(novaAmostraSangue);
                        System.out.println("Amostra de Sangue cadastrada com sucesso!\n\n");
                    }
                    // Cadastro de amostra de Urina
                    else if (tipoAmostra.equalsIgnoreCase("Urina")) {
                        System.out.print("Cor da urina: ");
                        String corUrina = leia.nextLine();
                        ControleAmostraUrina novaAmostraUrina = new ControleAmostraUrina(amostras.size() + 1, nomeCliente, dataRecebimento, corUrina);
                        amostras.add(novaAmostraUrina);
                        System.out.println("Amostra de Urina cadastrada com sucesso!\n\n");
                    } else {
                        System.out.println("Tipo de amostra inválido. Tente novamente.");
                    }
                    break;

                case 2:
                    System.out.println("Listar todas as Amostras\n\n");
                    if (amostras.isEmpty()) {
                        System.out.println("Nenhuma amostra cadastrada.\n");
                    } else {
                        for (ControleAmostra amostra : amostras) {
                            amostra.visualizarAmostra();
                        }
                    }
                    break;

                case 3:
                    System.out.println("Buscar Amostra por ID\n\n");
                    System.out.print("Informe o ID da amostra: ");
                    int idBusca = leia.nextInt();
                    boolean encontrado = false;
                    for (ControleAmostra amostra : amostras) {
                        if (amostra.getId() == idBusca) {
                            amostra.visualizarAmostra();
                            encontrado = true;
                            break;
                        }
                    }
                    if (!encontrado) {
                        System.out.println("Amostra não encontrada.\n");
                    }
                    break;

                case 4:
                    System.out.println("Atualizar Status da Amostra\n\n");
                    System.out.print("Informe o ID da amostra: ");
                    int idStatus = leia.nextInt();
                    leia.nextLine(); 
                    boolean statusAtualizado = false;
                    for (ControleAmostra amostra : amostras) {
                        if (amostra.getId() == idStatus) {
                            System.out.print("Informe o novo status: ");
                            String novoStatus = leia.nextLine();
                            amostra.atualizarStatus(novoStatus);
                            statusAtualizado = true;
                            System.out.println("Status atualizado com sucesso!\n");
                            break;
                        }
                    }
                    if (!statusAtualizado) {
                        System.out.println("Amostra não encontrada.\n");
                    }
                    break;

                case 5:
                    System.out.println("Inserir Resultado da Análise\n\n");
                    System.out.print("Informe o ID da amostra: ");
                    int idResultado = leia.nextInt();
                    leia.nextLine(); 
                    boolean resultadoInserido = false;
                    for (ControleAmostra amostra : amostras) {
                        if (amostra.getId() == idResultado) {
                            System.out.print("Informe o resultado da análise: ");
                            String resultado = leia.nextLine();
                            amostra.inserirResultado(resultado);
                            resultadoInserido = true;
                            System.out.println("Resultado inserido com sucesso!\n");
                            break;
                        }
                    }
                    if (!resultadoInserido) {
                        System.out.println("Amostra não encontrada.\n");
                    }
                    break;

                case 6:
                    System.out.println("Excluir Amostra\n\n");
                    System.out.print("Informe o ID da amostra a ser excluída: ");
                    int idExcluir = leia.nextInt();
                    boolean amostraExcluida = false;
                    for (int i = 0; i < amostras.size(); i++) {
                        if (amostras.get(i).getId() == idExcluir) {
                            amostras.remove(i);
                            amostraExcluida = true;
                            System.out.println("Amostra excluída com sucesso!\n");
                            break;
                        }
                    }
                    if (!amostraExcluida) {
                        System.out.println("Amostra não encontrada.\n");
                    }
                    break;

                default:
                    System.out.println("\nOpção Inválida!\n");
                    break;
            }
        }
    }

    public static void sobre() {
        System.out.println("\n*********************************************************");
        System.out.println("Projeto Desenvolvido por: Raquel Morabito");
        System.out.println("Raquel Morabito - raquelmorabito@hotmail.com");
        System.out.println("github.com/raquelmorabito");
        System.out.println("*********************************************************");
    }
}
