package ControleAmostrasLab;

import ControleAmostrasLab.controller.ControleAmostrasLabController;
import ControleAmostrasLab.model.ControleAmostra;
import ControleAmostrasLab.model.ControleAmostraSangue;
import ControleAmostrasLab.model.ControleAmostraUrina;

import java.io.IOException;
import java.util.Date;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Menu {

    public static Scanner leia = new Scanner(System.in);

    public static void main(String[] args) {
        ControleAmostrasLabController controller = new ControleAmostrasLabController();
        int opcao;

        // Inicializar com algumas amostras
        controller.cadastrar(new ControleAmostraSangue(1, "João Silva", "O+", new Date()));
        controller.cadastrar(new ControleAmostraUrina(2, "Maria Souza", new Date(), "Clara"));

        // Menu principal
        while (true) {
            System.out.println("*****************************************************");
            System.out.println("            LABORATÓRIO DE CONTROLE DE AMOSTRAS      ");
            System.out.println("*****************************************************");
            System.out.println("1 - Cadastrar Amostra");
            System.out.println("2 - Listar todas as Amostras");
            System.out.println("3 - Buscar Amostra por ID");
            System.out.println("4 - Atualizar Status da Amostra");
            System.out.println("5 - Inserir Resultado da Análise");
            System.out.println("6 - Excluir Amostra");
            System.out.println("7 - Sair");
            System.out.print("Digite a opção desejada: ");

            try {
                opcao = leia.nextInt();
            } catch (InputMismatchException e) {
                System.out.println("\nErro: Entrada inválida. Por favor, digite um número inteiro.");
                leia.nextLine(); // Limpa o buffer
                continue;
            }

            switch (opcao) {
                case 1 -> cadastrarAmostra(controller);
                case 2 -> controller.listarTodas(controller.getAmostras());
                case 3 -> buscarAmostraPorID(controller);
                case 4 -> atualizarStatusAmostra(controller);
                case 5 -> inserirResultadoAnalise(controller);
                case 6 -> excluirAmostra(controller);
                case 7 -> {
                    System.out.println("\nSaindo... Até logo!");
                    leia.close();
                    System.exit(0);
                }
                default -> System.out.println("\nOpção inválida. Tente novamente.");
            }
        }
    }

    public static void cadastrarAmostra(ControleAmostrasLabController controller) {
        System.out.println("\nCadastrar Amostra");
        leia.nextLine(); // Limpa o buffer
        System.out.print("Nome do cliente: ");
        String nomeCliente = leia.nextLine();
        System.out.print("Tipo de amostra (Sangue ou Urina): ");
        String tipoAmostra = leia.nextLine();

        ControleAmostra novaAmostra = null;
        if (tipoAmostra.equalsIgnoreCase("Sangue")) {
            System.out.print("Tipo sanguíneo (ex.: O+): ");
            String tipoSanguineo = leia.nextLine();
            novaAmostra = new ControleAmostraSangue(controller.getAmostras().size() + 1, nomeCliente, tipoSanguineo, new Date());
        } else if (tipoAmostra.equalsIgnoreCase("Urina")) {
            novaAmostra = new ControleAmostraUrina(controller.getAmostras().size() + 1, nomeCliente, new Date(), "Normal");
        }

        if (novaAmostra != null) {
            controller.cadastrar(novaAmostra);
        } else {
            System.out.println("Erro: Tipo de amostra inválido.");
        }

        keyPress();
    }

    public static void buscarAmostraPorID(ControleAmostrasLabController controller) {
        System.out.println("\nBuscar Amostra por ID");
        System.out.print("Informe o ID da amostra: ");

        try {
            int idBusca = leia.nextInt();
            ControleAmostra amostraEncontrada = controller.buscarPorId(idBusca);

            if (amostraEncontrada != null) {
                amostraEncontrada.visualizarAmostra();
            }
        } catch (InputMismatchException e) {
            System.out.println("\nErro: ID inválido. Por favor, insira um número inteiro.");
            leia.nextLine(); // Limpar buffer
        } finally {
            keyPress();
        }
    }

    public static void atualizarStatusAmostra(ControleAmostrasLabController controller) {
        System.out.println("\nAtualizar Status da Amostra");
        System.out.print("Informe o ID da amostra: ");
        int id = leia.nextInt();
        leia.nextLine(); // Limpa o buffer
        System.out.print("Novo status: ");
        String status = leia.nextLine();

        controller.atualizarStatus(id, status);
        keyPress();
    }

    public static void inserirResultadoAnalise(ControleAmostrasLabController controller) {
        System.out.println("\nInserir Resultado da Análise");
        System.out.print("Informe o ID da amostra: ");
        int id = leia.nextInt();
        leia.nextLine(); // Limpa o buffer
        System.out.print("Resultado da análise: ");
        String resultado = leia.nextLine();

        controller.inserirResultado(id, resultado);
        keyPress();
    }

    public static void excluirAmostra(ControleAmostrasLabController controller) {
        System.out.println("\nExcluir Amostra");
        System.out.print("Informe o ID da amostra: ");
        int id = leia.nextInt();

        controller.deletar(id);
        keyPress();
    }

public static void sobre() {
    System.out.println("\n*********************************************************");
    System.out.println("Projeto Desenvolvido por: Raquel Morabito ");
    System.out.println("Raquel Morabito - raquelmorabito@hotmail.com");
    System.out.println("github.com/raquelmorabito");
    System.out.println("*********************************************************");
}
    public static void keyPress() {
        try {
            System.out.println("\nPressione Enter para continuar...");
            System.in.read();
        } catch (IOException e) {
            System.out.println("Erro ao pressionar Enter.");
        }
    }
}

